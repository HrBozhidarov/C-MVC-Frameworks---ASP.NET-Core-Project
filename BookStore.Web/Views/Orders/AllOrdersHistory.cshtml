@{
    ViewData["Title"] = "AllOrdersHistory";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="text-center my-3">Orders</h1>

@inject IOrderService orderService

@{
    var dateObj = orderService.GetMinAndMaxRangeDateOnOrderBook();
}

@Html.AntiForgeryToken()

<div class="row mx-auto mb-4">
    <div class="k-content col-8 col-lg-6 col-md-6 mx-auto my-3">
        <h3 class="text-center w-100 my-3">View Yours Incomes!</h3>

        <h4 class="mt-3">Start date:</h4>
        <div>
            @(Html.Kendo().DatePicker()
                                                  .Name("start")
                                                  .Value(@dateObj.MinDate)
                                                  .Max(@dateObj.MinDate)
                                                  .Events(e => e.Change("startChange"))
                                                  .HtmlAttributes(new { style = "width: 100%" })
            )
        </div>

        <h4 style="margin-top: 2em">End date:</h4>
        <div class="mb-3">
            @(Html.Kendo().DatePicker()
                                                  .Name("end")
                                                  .Value(@dateObj.MaxDate)
                                                  .Min(@dateObj.MinDate)
                                                  .Events(e => e.Change("endChange"))
                                                  .HtmlAttributes(new { style = "width: 100%" })
            )
        </div>
        <div class="my-5 mx-auto w-100 d-flex justify-content-center">
            <button id="ViewIncomes" class="btn btn-primary">View Incomes</button>
        </div>
    </div>
</div>

<div id="appendOrders">
    <div id="allOrders">
        <div id="progressOrderLoader" class="text-center" style="display:none">
            <img src="~/lib/slick/ajax-loader.gif" />
        </div>
    </div>
</div>


<script type="text/javascript">
    var pageSize = 1;
    var pageIndex = 0;
    var maxPage = 0;
    var scrolling = true;
    var initial = false;

    getNumberOfComments();
    setTimeout(getData(), 300);

    $(document).ready(function () {

        $(window).scroll(function () {
            var scrollTop = $(document).scrollTop();
            var windowHeight = $(window).height();
            var bodyHeight = $(document).height() - windowHeight;
            var scrollPercentage = (scrollTop / bodyHeight);

            // if the scroll is more than 90% from the top, load more content.
            if (scrollPercentage > 0.8 && pageIndex <= maxPage && !scrolling) {
                getData();

                scrolling = true;
            }
        });
    });

    function getData() {
        $.ajax({
            type: 'POST',
            url: '/orders/GetOrders',
            data: { "pageindex": pageIndex, "pagesize": pageSize},
            dataType: 'html',
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                $("#progressOrderLoader").show();
            },
            success: function (data) {
                if (data.trim() != '') {
                    $("#allOrders").append(data);
                    scrolling = false;
                    initial = true;
                    pageIndex++;
                }
                else if (!initial) {
                    $("#allOrders").append('<h3>No Orders yet.</h3>' +
                        '<hr class= "hr-bg-color-second"/> ');
                    initial = true;
                }
                else {
                    $("#allOrders").append('<div class="text-center">No more Orders.</div> <hr class= "hr-bg-color-second"/> ');
                }
            },
            complete: function () {
                $("#progressOrderLoader").hide();
            },
            error: function () {
                alert("Error while retrieving data!");
            }
        });
    }

    function getNumberOfComments() {
        $.ajax({
            type: 'GET',
            url: '/api/ApiOrders/countOrders',
            data: {},
            dataType: 'text',
            success: function (data) {
                maxPage = Math.floor(parseInt(data) / pageSize);
            },
            error: function () {
                alert("Error in Order Api Controllers With Action CountOrders");
            }
        })
    }
</script>

<script>
    function startChange() {
        var endPicker = $("#end").data("kendoDatePicker"),
            startDate = this.value();

        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate() + 1);
            endPicker.min(startDate);
        }
    }

    function endChange() {
        var startPicker = $("#start").data("kendoDatePicker"),
            endDate = this.value();

        if (endDate) {
            endDate = new Date(endDate);
            endDate.setDate(endDate.getDate() - 1);
            startPicker.max(endDate);
        }
    }

    $("#ViewIncomes").click(function () {
        var startDate = $('#start').val();
        var endDate = $('#end').val();

        var object = JSON.stringify({ MinDate: startDate, MaxDate: endDate })

        $.ajax({
            type: 'POST',
            url: '/api/ApiOrders/Income',
            data: object,
            contentType: "application/json",
            accepts: "json",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            success: function (data) {
                if (data != null) {
                    swal(`Yours income is ${data.Income} $`, `From start date: ${data.StartDate}\n\nTo end date: ${data.EndDate}`, 'success');
                }
                else {
                    swal("Something wrong", "Try again!", "error");
                }
            },
            error: function () {
                swal("Something wrong", "Try again!", "error");
            }
        })
    })

</script>